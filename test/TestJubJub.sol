// Copyright (c) 2018 @HarryR
// Copyright (c) 2018 @yondonfu
// License: LGPL-3.0+

pragma solidity ^0.5.0;

import "truffle/Assert.sol";
import "../contracts/JubJub.sol";


contract TestJubJub
{

	function testScalarMult()
		public
	{
		uint256 x = 17777552123799933955779906779655732241715742912184938656739573121738514868268;
		uint256 y = 2626589144620713026669568689430873010625803728049924121243784502389097019475;

		uint256 rx;
		uint256 ry;
		(rx, ry) = JubJub.scalarMult(x, y, 6890855772600357754907169075114257697580319025794532037257385534741338397365);

		Assert.equal(rx, 6317123931401941284657971611369077243307682877199795030160588338302336995127, "Bad multiply x");

		Assert.equal(ry, 17705894757276775630165779951991641206660307982595100429224895554788146104270, "Bad multiply y");
	}

	function testPointDouble()
		public
	{
		uint256[2] memory p = [
			17777552123799933955779906779655732241715742912184938656739573121738514868268,
			2626589144620713026669568689430873010625803728049924121243784502389097019475];

		uint256[2] memory d = JubJub.pointDouble(p);

		Assert.equal(d[0], 6890855772600357754907169075114257697580319025794532037257385534741338397365, "Bad double x coord");

		Assert.equal(d[1], 4338620300185947561074059802482547481416142213883829469920100239455078257889, "Bad double y coord");
	}

	/*
	function testPointAddEtec()
		public
	{
		uint256 x = 17777552123799933955779906779655732241715742912184938656739573121738514868268;
		uint256 y = 2626589144620713026669568689430873010625803728049924121243784502389097019475;
		uint256[4] memory q;
		uint256[4] memory r;

		JubJub.pointToEtec(x, y, q);
		JubJub.etecAdd(q, q, r);
		(x, y) = JubJub.etecToPoint(r[0], r[1], r[2], r[3]);

		Assert.equal(x, 6890855772600357754907169075114257697580319025794532037257385534741338397365, "Bad double x coord");
		Assert.equal(y, 4338620300185947561074059802482547481416142213883829469920100239455078257889, "Bad double y coord");
	}

	function testPointDoubleEtec()
		public
	{
		uint256 x = 17777552123799933955779906779655732241715742912184938656739573121738514868268;
		uint256 y = 2626589144620713026669568689430873010625803728049924121243784502389097019475;
		uint256[4] memory q;
		uint256[4] memory r;

		JubJub.pointToEtec(x, y, q);
		JubJub.etecDouble(q, r);
		(x, y) = JubJub.etecToPoint(r[0], r[1], r[2], r[3]);

		Assert.equal(x, 6890855772600357754907169075114257697580319025794532037257385534741338397365, "Bad double x coord");
		Assert.equal(y, 4338620300185947561074059802482547481416142213883829469920100239455078257889, "Bad double y coord");
	}
	*/
}
